import './augmentation.js';
import { z } from "zod";

//#region packer.d.ts

/**
 * @public
 * @desc Attaches an inheritable attributes to the schema (withstands refinements).
 */
declare const pack: <T extends z.ZodType, B extends object>(subject: T, bag: B) => T & {
  _zod: {
    bag: T["_zod"]["bag"] & B;
  };
};
/**
 * @public
 * @desc Retrieves the attributes attached to the schema by pack() method.
 */
declare const unpack: <T extends z.core.$ZodType>(subject: T) => T["_zod"]["bag"];
//#endregion
//#region brand.d.ts
/**
 * @public
 * @desc Retrieves the brand from the schema set by its .brand() method.
 * */
declare const getBrand: (subject: z.core.$ZodType) => string | number | symbol | undefined;
//#endregion
export { getBrand, pack, unpack };